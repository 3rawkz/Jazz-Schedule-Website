#!/usr/bin/env python3.5

"""
  Script to invoke all scrapers and run unit tests
"""

from FiftyFiveBarScraper import FiftyFiveBarScraper
from multiprocessing import Process
import glob
import logging
import os
import subprocess
import sys

all_scrapers = glob.glob("*Scraper.py")
LOG_DIRECTORY = "log"

def exec_command(cmd):
  return str_of_bytes(subprocess.check_output(cmd, shell=True))

def main():
  if not os.path.exists(LOG_DIRECTORY):
    os.mkdir(LOG_DIRECTORY)
  procs = [Process(target=runspider, args=(scraper,))
           for scraper in all_scrapers
           if scraper != "JazzScraper.py"]
  [p.start() for p in procs]
  [p.join() for p in procs]
  # Detect errors?
  return

def runspider(name):
  output = exec_command(" ".join(("scrapy"
                                 ,"runspider"
                                 ,"--logfile=%s/%s.log" % (LOG_DIRECTORY, name)
                                 ,name)))
  logging.info(output)
  return

def str_of_bytes(raw):
  return str(raw, encoding="utf-8")

def test():
  try:
    output = exec_command(" ".join(("python3.5"
                                   ,"-m unittest"
                                   ,"-v"
                                   ," ".join(glob.glob("*.py")))))
    logging.info(output)
    return True
  except subprocess.CalledProcessError as cpe:
    return False

if __name__ == "__main__":
  if test():
    if len(sys.argv) == 1:
      main()
  else:
    print("Detected unit test failures, refusing to invoke scrapers")
